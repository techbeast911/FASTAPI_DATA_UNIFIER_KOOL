"""add password hash

Revision ID: d092bfcabac9
Revises: c77de2051794
Create Date: 2025-06-24 13:20:58.609728

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd092bfcabac9'
down_revision: Union[str, None] = 'c77de2051794'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('battery',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('field_technician', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('condition', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('receiver', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('faulty_component', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('remedy', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_category_new_ref', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_sent_out', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('inventory returns',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit_received_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('released_to', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_sent_out', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('inventory_in',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_category_new_ref', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('brought_in_from', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_logged_out', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('inverters',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('engineer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('inverter_size', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('release_date', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('return_inverter_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('return_date', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('iot',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('device_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_category_new_ref', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('engineer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_sent_out', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('paygo',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('air_conditioner', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('paygo_id_kb_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('paygo_or_usb', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('paygo_technician', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('assembly_remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_sent_out', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('production',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('comp_fixing', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('engineer_that_installed_compressor', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('comp_controller_connection', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('piping', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('brazing', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vacumming', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gas_charging', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('batching', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('leak_test', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('packaging', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('drying', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('officer_that_passed_freezer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('issue', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_category_new_ref', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('assembly_remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_sent_out', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('quality',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('product_serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_category_new_ref', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('performance', sa.Float(), nullable=False),
    sa.Column('accessories_checking', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('officer_that_passed_freezer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('qc_remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_sent_out', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.create_table('user_accounts',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid'),
    schema='kool_assembly'
    )
    op.drop_table('inventory')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory',
    sa.Column('product_serial_no', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_logged_in', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('product_sku', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('product_category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('client_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_logged_out', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('product_serial_no', name='inventory_pkey'),
    sa.UniqueConstraint('product_serial_no', name='inventory_product_serial_no_key')
    )
    op.drop_table('user_accounts', schema='kool_assembly')
    op.drop_table('quality', schema='kool_assembly')
    op.drop_table('production', schema='kool_assembly')
    op.drop_table('paygo', schema='kool_assembly')
    op.drop_table('iot', schema='kool_assembly')
    op.drop_table('inverters', schema='kool_assembly')
    op.drop_table('inventory_in', schema='kool_assembly')
    op.drop_table('inventory returns', schema='kool_assembly')
    op.drop_table('battery', schema='kool_assembly')
    # ### end Alembic commands ###
